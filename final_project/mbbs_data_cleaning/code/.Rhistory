summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
View(mbbs_chatham)
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name)) %>%
mbbs_orange_sorted$County <- c("County")
mbbs_orange_sorted$County <- c("County")
View(mbbs_orange_sorted)
mbbs_orange_sorted$County <- c("Orange")
View(mbbs_orange_sorted)
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name)) %>%
mbbs_chatham_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_chatham_sorted$County <- c("Chatham")
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted
View(mbbs_sorted)
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
unique(mbbs_sorted$common_name)
unique(mbbs_sorted$year)
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_durham.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_orange.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_routes.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_survey_events.rda")
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_chatham.rda")
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
write.csv(mbbs_chat_sorted, "mbbs_chatham.csv")
write.csv(mbbs_sorted, "mbbs_sorted.csv")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_chatham.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_orange.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_routes.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_survey_events.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_durham.rda")
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
mbbs_sorted
View(mbbs_sorted)
mbbs_change <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Change_from_previous_year = count - lag(count),
Change_from_previous_year = ifelse(Year == min(year), NA, Change_from_previous_year))
mbbs_change <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Change_from_previous_year = count - lag(count),
Change_from_previous_year = ifelse(year == min(year), NA, Change_from_previous_year))
mbbs_change
View(mbbs_change)
mbbs_change <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
View(mbbs_change)
mbbs_sorted <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
mbbs_sorted <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_durham.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_orange.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_chatham.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_survey_events.rda")
load("C:/Users/ameli/OneDrive/Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/code/mbbs_routes.rda")
View(mbbs)
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
mbbs_sorted <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
# for each county route level...
## Chatham
mbbs_chat_route <- mbbs_chatham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_chat_route <- mbbs_chat_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_route_pchange <- mbbs_chat_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Orange
mbbs_orange_route <- mbbs_orange %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_route <- mbbs_orange_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_route_pchange <- mbbs_orange_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Durham
mbbs_durham_route <- mbbs_durham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_route <- mbbs_durham_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_route_pchange <- mbbs_durham_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Compile
mbbs_route_pchange <- rbind(mbbs_chat_route_pchange, mbbs_orange_route_pchange, mbbs_durham_route_pchange)
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
write.csv(mbbs_route_pchange, "../Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/CSV/mbbs_route_pchange.csv")
mbbs_chat_sorted
load libraries
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_chat_sorted
View(mbbs_chatham)
View(mbbs_chat_sorted)
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
mbbs_sorted <- mbbs_sorted %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
# for each county route level...
## Chatham
mbbs_chat_route <- mbbs_chatham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_chat_route <- mbbs_chat_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_route_pchange <- mbbs_chat_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Orange
mbbs_orange_route <- mbbs_orange %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_route <- mbbs_orange_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_route_pchange <- mbbs_orange_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Durham
mbbs_durham_route <- mbbs_durham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_route <- mbbs_durham_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_route_pchange <- mbbs_durham_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Compile
mbbs_route_pchange <- rbind(mbbs_chat_route_pchange, mbbs_orange_route_pchange, mbbs_durham_route_pchange)
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
write.csv(mbbs_route_pchange, "../Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/CSV/mbbs_route_pchange.csv")
View(mbbs_sorted)
?lag()
## Processing MBBS data to produce map of results!
## First load in all sheets .RDA files in MBBS folder
# load libraries
library(dplyr)
library(tidyr)
# FOR COUNTY LEVEL DATA MAPS
# Take each county and find unique combos of common name, sci name, and year
# Find the total counts for each year for each species
mbbs_chat_sorted <- mbbs_chatham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_sorted <-  mbbs_durham %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_sorted <- mbbs_orange %>%
group_by(common_name, sci_name, year) %>%
summarize(count = sum(count)) %>%
ungroup()
# get rid of sp. counts
mbbs_chat_sorted <- mbbs_chat_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_sorted <- mbbs_durham_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_sorted <- mbbs_orange_sorted %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_sorted$County <- c("Chatham")
mbbs_orange_sorted$County <- c("Orange")
mbbs_durham_sorted$County <- c("Durham")
mbbs_sorted <- rbind(mbbs_chat_sorted, mbbs_orange_sorted, mbbs_durham_sorted)
mbbs_sorted$Species_Scientific <- paste(mbbs_sorted$common_name, " (", mbbs_sorted$sci_name, ")", sep ="")
mbbs_sorted <- mbbs_sorted %>%
group_by(common_name, County) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
# for each county route level...
## Chatham
mbbs_chat_route <- mbbs_chatham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_chat_route <- mbbs_chat_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_chat_route_pchange <- mbbs_chat_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Orange
mbbs_orange_route <- mbbs_orange %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_orange_route <- mbbs_orange_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_orange_route_pchange <- mbbs_orange_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Durham
mbbs_durham_route <- mbbs_durham %>%
group_by(common_name, sci_name, year, route_num, mbbs_county) %>%
summarize(count = sum(count)) %>%
ungroup()
mbbs_durham_route <- mbbs_durham_route %>%
filter(!grepl("sp.", sci_name)) %>%
filter(!grepl("sp.", common_name))
mbbs_durham_route_pchange <- mbbs_durham_route %>%
group_by(common_name) %>%
mutate(Percent_change_from_previous_year = (count - lag(count)) / lag(count) * 100,
Percent_change_from_previous_year = ifelse(year == min(year), NA, Percent_change_from_previous_year))
## Compile
mbbs_route_pchange <- rbind(mbbs_chat_route_pchange, mbbs_orange_route_pchange, mbbs_durham_route_pchange)
# write out CSVs of data
write.csv(mbbs_chat_sorted, "../CSV/mbbs_chatham.csv")
write.csv(mbbs_orange_sorted, "../CSV/mbbs_orange.csv")
write.csv(mbbs_durham_sorted, "../CSV/mbbs_durham.csv")
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
write.csv(mbbs_route_pchange, "../Desktop/Geog 456/git/Geog456/final_project/mbbs_data_cleaning/CSV/mbbs_route_pchange.csv")
mbbs_sorted
View(mbbs_sorted)
write.csv(mbbs_sorted, "../CSV/mbbs_sorted.csv")
View(mbbs_sorted)
View(mbbs_sorted)
